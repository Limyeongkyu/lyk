<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xmlns:context="http://www.springframework.org/schema/context"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
   
   <!-- Root Context: defines shared resources visible to all other web components -->
      
   <!-- database 접속하기 위한 정보 -->
   <bean id="dataSource"
      class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
      <property name="url"
         value="jdbc:mysql://192.168.0.27:3306/respect?useSSL=false"></property>
      <property name="username" value="sh"></property>
      <property name="password" value="shsh"></property>
   </bean>

   <bean id="transactionManager"
      class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource"></property>
   </bean>
   
   <tx:annotation-driven/>

   <!-- 여기서 사용하는 dataSource는 위에 서만든 dataSource bean -->
   <!-- classpath:mappers/**/*Mapper.xml mappers폴더 아래 모든경로에 대해 Mapper.xml로 
      끝나는 파일을 찾는다. -->
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <property name="configLocation" value="classpath:/mybatis-config.xml"></property>
      <property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"></property>
   </bean>

   <!-- SqlSessionTemplate 이친구가 try catch finally를 자동으로 해줌 상속 or 주입 방법이 있다 
      destroy-method="clearCache 쿼리문 보관x (확실하지 않음) -->
   <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"
      destroy-method="clearCache">
      <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
   </bean>

   <context:component-scan base-package="org.lyk.persistence"></context:component-scan>
   <context:component-scan base-package="org.lyk.service"></context:component-scan>

<!--    <aop:aspectj-autoproxy></aop:aspectj-autoproxy> -->
</beans>